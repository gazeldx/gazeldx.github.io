---
layout: post
title:  "Ruby连数据库的问题"
date:   2016-03-10 11:13:31
categories: Ruby
---
参考自: https://devcenter.heroku.com/articles/concurrency-and-database-connections

# Sequel
和puma连用,如果报Sequel::PoolTimeout错误,可能是的puma -t的max_threads的值大于了max_connections的值(默认为4, 见 http://sequel.jeremyevans.net/rdoc/classes/Sequel/ThreadedConnectionPool.html ).
{% highlight ruby %}
Sequel.connect({ adapter:          'postgres',
                user:             Settings.database.username,
                password:         Settings.database.password,
                host:             Settings.database.host,
                port:             5432,
                pool_class:       Sequel::ThreadedConnectionPool,
                database:         Settings.database.name,
                max_connections:  100 })
{% endhighlight %}

# ActiveRecord
## Puma
同样, puma -t的值大于了pool,也会报同样的问题: ActiveRecord::ConnectionTimeoutError - could not obtain a database connection within 5 seconds. The max pool size is currently 5; consider increasing it
{% highlight ruby %}
ActiveRecord::Base.establish_connection(
  adapter:  'postgresql',
  host:     Settings.database.host,
  username: Settings.database.username,
  password: Settings.database.password,
  database: Settings.database.name,
  pool: puma_max_threads,
  reaping_frequency: 30
)
{% endhighlight %}
pool的值应该和puma_max_threads一致.
这里reaping_frequency不能少,可以确保数据库的自动重连.

## Sneakers
Sneakers里面的configuration中有threads数量, default value is 10. 

So sneakers is multiple processes with multiple threads each process.

### Please make sure the database connection pools of ActiveRecord has been set to the same value of threads in configuration of Sneakers(default should be 10)!

## Refus_scheduler
{% highlight ruby %}
scheduler.every '3h' do
  # do something every 3 hours
end
{% endhighlight %}

Refus_scheduler is one process with multiple threads. 
Each `.every` `.cron` etc will create a new thread.
So database connections `pool` should be set to at least the threads count. 
You should count the threads count by yourself.
